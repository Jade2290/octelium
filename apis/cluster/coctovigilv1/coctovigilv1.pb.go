// Copyright Octelium Labs, LLC. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.21.12
// source: coctovigilv1.proto

package coctovigilv1

import (
	corev1 "github.com/octelium/octelium/apis/main/corev1"
	metav1 "github.com/octelium/octelium/apis/main/metav1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthenticateAndAuthorizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceUID    string                 `protobuf:"bytes,1,opt,name=serviceUID,proto3" json:"serviceUID,omitempty"`
	Request       *DownstreamRequest     `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateAndAuthorizeRequest) Reset() {
	*x = AuthenticateAndAuthorizeRequest{}
	mi := &file_coctovigilv1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateAndAuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateAndAuthorizeRequest) ProtoMessage() {}

func (x *AuthenticateAndAuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateAndAuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateAndAuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{0}
}

func (x *AuthenticateAndAuthorizeRequest) GetServiceUID() string {
	if x != nil {
		return x.ServiceUID
	}
	return ""
}

func (x *AuthenticateAndAuthorizeRequest) GetRequest() *DownstreamRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type AuthenticateAndAuthorizeResponse struct {
	state                       protoimpl.MessageState                `protogen:"open.v1"`
	IsAuthenticated             bool                                  `protobuf:"varint,1,opt,name=isAuthenticated,proto3" json:"isAuthenticated,omitempty"`
	IsAuthorized                bool                                  `protobuf:"varint,2,opt,name=isAuthorized,proto3" json:"isAuthorized,omitempty"`
	RequestContext              *corev1.RequestContext                `protobuf:"bytes,3,opt,name=requestContext,proto3" json:"requestContext,omitempty"`
	AuthorizationDecisionReason *corev1.AccessLog_Entry_Common_Reason `protobuf:"bytes,4,opt,name=authorizationDecisionReason,proto3" json:"authorizationDecisionReason,omitempty"`
	ServiceConfigName           string                                `protobuf:"bytes,5,opt,name=serviceConfigName,proto3" json:"serviceConfigName,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *AuthenticateAndAuthorizeResponse) Reset() {
	*x = AuthenticateAndAuthorizeResponse{}
	mi := &file_coctovigilv1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateAndAuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateAndAuthorizeResponse) ProtoMessage() {}

func (x *AuthenticateAndAuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateAndAuthorizeResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateAndAuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{1}
}

func (x *AuthenticateAndAuthorizeResponse) GetIsAuthenticated() bool {
	if x != nil {
		return x.IsAuthenticated
	}
	return false
}

func (x *AuthenticateAndAuthorizeResponse) GetIsAuthorized() bool {
	if x != nil {
		return x.IsAuthorized
	}
	return false
}

func (x *AuthenticateAndAuthorizeResponse) GetRequestContext() *corev1.RequestContext {
	if x != nil {
		return x.RequestContext
	}
	return nil
}

func (x *AuthenticateAndAuthorizeResponse) GetAuthorizationDecisionReason() *corev1.AccessLog_Entry_Common_Reason {
	if x != nil {
		return x.AuthorizationDecisionReason
	}
	return nil
}

func (x *AuthenticateAndAuthorizeResponse) GetServiceConfigName() string {
	if x != nil {
		return x.ServiceConfigName
	}
	return ""
}

type DownstreamRequest struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Source        *DownstreamRequest_Source      `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Request       *corev1.RequestContext_Request `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamRequest) Reset() {
	*x = DownstreamRequest{}
	mi := &file_coctovigilv1_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamRequest) ProtoMessage() {}

func (x *DownstreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamRequest.ProtoReflect.Descriptor instead.
func (*DownstreamRequest) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{2}
}

func (x *DownstreamRequest) GetSource() *DownstreamRequest_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *DownstreamRequest) GetRequest() *corev1.RequestContext_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type DoAuthenticateAndAuthorizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       *corev1.Service        `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Request       *DownstreamRequest     `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoAuthenticateAndAuthorizeRequest) Reset() {
	*x = DoAuthenticateAndAuthorizeRequest{}
	mi := &file_coctovigilv1_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoAuthenticateAndAuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoAuthenticateAndAuthorizeRequest) ProtoMessage() {}

func (x *DoAuthenticateAndAuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoAuthenticateAndAuthorizeRequest.ProtoReflect.Descriptor instead.
func (*DoAuthenticateAndAuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{3}
}

func (x *DoAuthenticateAndAuthorizeRequest) GetService() *corev1.Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *DoAuthenticateAndAuthorizeRequest) GetRequest() *DownstreamRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetDownstreamFromSessionUIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionUID    string                 `protobuf:"bytes,1,opt,name=sessionUID,proto3" json:"sessionUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownstreamFromSessionUIDRequest) Reset() {
	*x = GetDownstreamFromSessionUIDRequest{}
	mi := &file_coctovigilv1_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownstreamFromSessionUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownstreamFromSessionUIDRequest) ProtoMessage() {}

func (x *GetDownstreamFromSessionUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownstreamFromSessionUIDRequest.ProtoReflect.Descriptor instead.
func (*GetDownstreamFromSessionUIDRequest) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{4}
}

func (x *GetDownstreamFromSessionUIDRequest) GetSessionUID() string {
	if x != nil {
		return x.SessionUID
	}
	return ""
}

type GetDownstreamFromSessionUIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *corev1.Session        `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	User          *corev1.User           `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Groups        []*corev1.Group        `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	Device        *corev1.Device         `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownstreamFromSessionUIDResponse) Reset() {
	*x = GetDownstreamFromSessionUIDResponse{}
	mi := &file_coctovigilv1_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownstreamFromSessionUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownstreamFromSessionUIDResponse) ProtoMessage() {}

func (x *GetDownstreamFromSessionUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownstreamFromSessionUIDResponse.ProtoReflect.Descriptor instead.
func (*GetDownstreamFromSessionUIDResponse) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{5}
}

func (x *GetDownstreamFromSessionUIDResponse) GetSession() *corev1.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GetDownstreamFromSessionUIDResponse) GetUser() *corev1.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetDownstreamFromSessionUIDResponse) GetGroups() []*corev1.Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GetDownstreamFromSessionUIDResponse) GetDevice() *corev1.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type AuthorizeRequest struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	ServiceUID    string                         `protobuf:"bytes,1,opt,name=serviceUID,proto3" json:"serviceUID,omitempty"`
	SessionUID    string                         `protobuf:"bytes,2,opt,name=sessionUID,proto3" json:"sessionUID,omitempty"`
	Request       *corev1.RequestContext_Request `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	mi := &file_coctovigilv1_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{6}
}

func (x *AuthorizeRequest) GetServiceUID() string {
	if x != nil {
		return x.ServiceUID
	}
	return ""
}

func (x *AuthorizeRequest) GetSessionUID() string {
	if x != nil {
		return x.SessionUID
	}
	return ""
}

func (x *AuthorizeRequest) GetRequest() *corev1.RequestContext_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type AuthorizeResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	IsAuthorized  bool                                  `protobuf:"varint,1,opt,name=isAuthorized,proto3" json:"isAuthorized,omitempty"`
	Reason        *corev1.AccessLog_Entry_Common_Reason `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeResponse) Reset() {
	*x = AuthorizeResponse{}
	mi := &file_coctovigilv1_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResponse) ProtoMessage() {}

func (x *AuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResponse.ProtoReflect.Descriptor instead.
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{7}
}

func (x *AuthorizeResponse) GetIsAuthorized() bool {
	if x != nil {
		return x.IsAuthorized
	}
	return false
}

func (x *AuthorizeResponse) GetReason() *corev1.AccessLog_Entry_Common_Reason {
	if x != nil {
		return x.Reason
	}
	return nil
}

type EvaluateRequest struct {
	state          protoimpl.MessageState          `protogen:"open.v1"`
	Policies       []string                        `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
	InlinePolicies []*EvaluateRequest_InlinePolicy `protobuf:"bytes,2,rep,name=inlinePolicies,proto3" json:"inlinePolicies,omitempty"`
	Ctx            *structpb.Struct                `protobuf:"bytes,3,opt,name=ctx,proto3" json:"ctx,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EvaluateRequest) Reset() {
	*x = EvaluateRequest{}
	mi := &file_coctovigilv1_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateRequest) ProtoMessage() {}

func (x *EvaluateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateRequest.ProtoReflect.Descriptor instead.
func (*EvaluateRequest) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{8}
}

func (x *EvaluateRequest) GetPolicies() []string {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *EvaluateRequest) GetInlinePolicies() []*EvaluateRequest_InlinePolicy {
	if x != nil {
		return x.InlinePolicies
	}
	return nil
}

func (x *EvaluateRequest) GetCtx() *structpb.Struct {
	if x != nil {
		return x.Ctx
	}
	return nil
}

type EvaluateResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Effect        corev1.Policy_Spec_Rule_Effect `protobuf:"varint,1,opt,name=effect,proto3,enum=octelium.api.main.core.v1.Policy_Spec_Rule_Effect" json:"effect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvaluateResponse) Reset() {
	*x = EvaluateResponse{}
	mi := &file_coctovigilv1_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateResponse) ProtoMessage() {}

func (x *EvaluateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateResponse.ProtoReflect.Descriptor instead.
func (*EvaluateResponse) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{9}
}

func (x *EvaluateResponse) GetEffect() corev1.Policy_Spec_Rule_Effect {
	if x != nil {
		return x.Effect
	}
	return corev1.Policy_Spec_Rule_Effect(0)
}

type DownstreamRequest_Source struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamRequest_Source) Reset() {
	*x = DownstreamRequest_Source{}
	mi := &file_coctovigilv1_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamRequest_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamRequest_Source) ProtoMessage() {}

func (x *DownstreamRequest_Source) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamRequest_Source.ProtoReflect.Descriptor instead.
func (*DownstreamRequest_Source) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{2, 0}
}

func (x *DownstreamRequest_Source) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DownstreamRequest_Source) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type EvaluateRequest_InlinePolicy struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Policy        *corev1.InlinePolicy    `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	ResourceRef   *metav1.ObjectReference `protobuf:"bytes,2,opt,name=resourceRef,proto3" json:"resourceRef,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvaluateRequest_InlinePolicy) Reset() {
	*x = EvaluateRequest_InlinePolicy{}
	mi := &file_coctovigilv1_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluateRequest_InlinePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateRequest_InlinePolicy) ProtoMessage() {}

func (x *EvaluateRequest_InlinePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_coctovigilv1_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateRequest_InlinePolicy.ProtoReflect.Descriptor instead.
func (*EvaluateRequest_InlinePolicy) Descriptor() ([]byte, []int) {
	return file_coctovigilv1_proto_rawDescGZIP(), []int{8, 0}
}

func (x *EvaluateRequest_InlinePolicy) GetPolicy() *corev1.InlinePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *EvaluateRequest_InlinePolicy) GetResourceRef() *metav1.ObjectReference {
	if x != nil {
		return x.ResourceRef
	}
	return nil
}

var File_coctovigilv1_proto protoreflect.FileDescriptor

var file_coctovigilv1_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c, 0x76, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x76,
	0x69, 0x67, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x26, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x26, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x76,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x1f, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x49, 0x44, 0x12, 0x4e, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x63, 0x74,
	0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xed, 0x02, 0x0a, 0x20, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x0e,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x7a, 0x0a, 0x1b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x1b,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x11, 0x44, 0x6f,
	0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x53, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x21, 0x44, 0x6f,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a,
	0x22, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x72,
	0x6f, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x49, 0x44, 0x22, 0x8d, 0x02, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f,
	0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69,
	0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c,
	0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x49, 0x44, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x63, 0x74, 0x65,
	0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12,
	0x50, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4c, 0x6f, 0x67, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0xe1, 0x02, 0x0a, 0x0f, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x12, 0x67, 0x0a, 0x0e, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6f, 0x63, 0x74, 0x65,
	0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0e, 0x69, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x03, 0x63, 0x74,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x03, 0x63, 0x74, 0x78, 0x1a, 0x9d, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3f, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75,
	0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x4c, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f,
	0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x66, 0x22, 0x5e, 0x0a, 0x10, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6f, 0x63, 0x74, 0x65,
	0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x06, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x32, 0xdb, 0x04, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa5, 0x01, 0x0a, 0x18, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x42, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75,
	0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6f, 0x63,
	0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x6f, 0x63, 0x74,
	0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x78, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x33,
	0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x76,
	0x69, 0x67, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xae, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x49, 0x44, 0x12, 0x45, 0x2e, 0x6f, 0x63,
	0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x46, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69,
	0x67, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x08,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x12, 0x32, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c,
	0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f,
	0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2f, 0x6f, 0x63, 0x74, 0x65, 0x6c,
	0x69, 0x75, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x2f, 0x63, 0x6f, 0x63, 0x74, 0x6f, 0x76, 0x69, 0x67, 0x69, 0x6c, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_coctovigilv1_proto_rawDescOnce sync.Once
	file_coctovigilv1_proto_rawDescData = file_coctovigilv1_proto_rawDesc
)

func file_coctovigilv1_proto_rawDescGZIP() []byte {
	file_coctovigilv1_proto_rawDescOnce.Do(func() {
		file_coctovigilv1_proto_rawDescData = protoimpl.X.CompressGZIP(file_coctovigilv1_proto_rawDescData)
	})
	return file_coctovigilv1_proto_rawDescData
}

var file_coctovigilv1_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_coctovigilv1_proto_goTypes = []any{
	(*AuthenticateAndAuthorizeRequest)(nil),      // 0: octelium.api.cluster.octovigil.v1.AuthenticateAndAuthorizeRequest
	(*AuthenticateAndAuthorizeResponse)(nil),     // 1: octelium.api.cluster.octovigil.v1.AuthenticateAndAuthorizeResponse
	(*DownstreamRequest)(nil),                    // 2: octelium.api.cluster.octovigil.v1.DownstreamRequest
	(*DoAuthenticateAndAuthorizeRequest)(nil),    // 3: octelium.api.cluster.octovigil.v1.DoAuthenticateAndAuthorizeRequest
	(*GetDownstreamFromSessionUIDRequest)(nil),   // 4: octelium.api.cluster.octovigil.v1.GetDownstreamFromSessionUIDRequest
	(*GetDownstreamFromSessionUIDResponse)(nil),  // 5: octelium.api.cluster.octovigil.v1.GetDownstreamFromSessionUIDResponse
	(*AuthorizeRequest)(nil),                     // 6: octelium.api.cluster.octovigil.v1.AuthorizeRequest
	(*AuthorizeResponse)(nil),                    // 7: octelium.api.cluster.octovigil.v1.AuthorizeResponse
	(*EvaluateRequest)(nil),                      // 8: octelium.api.cluster.octovigil.v1.EvaluateRequest
	(*EvaluateResponse)(nil),                     // 9: octelium.api.cluster.octovigil.v1.EvaluateResponse
	(*DownstreamRequest_Source)(nil),             // 10: octelium.api.cluster.octovigil.v1.DownstreamRequest.Source
	(*EvaluateRequest_InlinePolicy)(nil),         // 11: octelium.api.cluster.octovigil.v1.EvaluateRequest.InlinePolicy
	(*corev1.RequestContext)(nil),                // 12: octelium.api.main.core.v1.RequestContext
	(*corev1.AccessLog_Entry_Common_Reason)(nil), // 13: octelium.api.main.core.v1.AccessLog.Entry.Common.Reason
	(*corev1.RequestContext_Request)(nil),        // 14: octelium.api.main.core.v1.RequestContext.Request
	(*corev1.Service)(nil),                       // 15: octelium.api.main.core.v1.Service
	(*corev1.Session)(nil),                       // 16: octelium.api.main.core.v1.Session
	(*corev1.User)(nil),                          // 17: octelium.api.main.core.v1.User
	(*corev1.Group)(nil),                         // 18: octelium.api.main.core.v1.Group
	(*corev1.Device)(nil),                        // 19: octelium.api.main.core.v1.Device
	(*structpb.Struct)(nil),                      // 20: google.protobuf.Struct
	(corev1.Policy_Spec_Rule_Effect)(0),          // 21: octelium.api.main.core.v1.Policy.Spec.Rule.Effect
	(*corev1.InlinePolicy)(nil),                  // 22: octelium.api.main.core.v1.InlinePolicy
	(*metav1.ObjectReference)(nil),               // 23: octelium.api.main.meta.v1.ObjectReference
}
var file_coctovigilv1_proto_depIdxs = []int32{
	2,  // 0: octelium.api.cluster.octovigil.v1.AuthenticateAndAuthorizeRequest.request:type_name -> octelium.api.cluster.octovigil.v1.DownstreamRequest
	12, // 1: octelium.api.cluster.octovigil.v1.AuthenticateAndAuthorizeResponse.requestContext:type_name -> octelium.api.main.core.v1.RequestContext
	13, // 2: octelium.api.cluster.octovigil.v1.AuthenticateAndAuthorizeResponse.authorizationDecisionReason:type_name -> octelium.api.main.core.v1.AccessLog.Entry.Common.Reason
	10, // 3: octelium.api.cluster.octovigil.v1.DownstreamRequest.source:type_name -> octelium.api.cluster.octovigil.v1.DownstreamRequest.Source
	14, // 4: octelium.api.cluster.octovigil.v1.DownstreamRequest.request:type_name -> octelium.api.main.core.v1.RequestContext.Request
	15, // 5: octelium.api.cluster.octovigil.v1.DoAuthenticateAndAuthorizeRequest.service:type_name -> octelium.api.main.core.v1.Service
	2,  // 6: octelium.api.cluster.octovigil.v1.DoAuthenticateAndAuthorizeRequest.request:type_name -> octelium.api.cluster.octovigil.v1.DownstreamRequest
	16, // 7: octelium.api.cluster.octovigil.v1.GetDownstreamFromSessionUIDResponse.session:type_name -> octelium.api.main.core.v1.Session
	17, // 8: octelium.api.cluster.octovigil.v1.GetDownstreamFromSessionUIDResponse.user:type_name -> octelium.api.main.core.v1.User
	18, // 9: octelium.api.cluster.octovigil.v1.GetDownstreamFromSessionUIDResponse.groups:type_name -> octelium.api.main.core.v1.Group
	19, // 10: octelium.api.cluster.octovigil.v1.GetDownstreamFromSessionUIDResponse.device:type_name -> octelium.api.main.core.v1.Device
	14, // 11: octelium.api.cluster.octovigil.v1.AuthorizeRequest.request:type_name -> octelium.api.main.core.v1.RequestContext.Request
	13, // 12: octelium.api.cluster.octovigil.v1.AuthorizeResponse.reason:type_name -> octelium.api.main.core.v1.AccessLog.Entry.Common.Reason
	11, // 13: octelium.api.cluster.octovigil.v1.EvaluateRequest.inlinePolicies:type_name -> octelium.api.cluster.octovigil.v1.EvaluateRequest.InlinePolicy
	20, // 14: octelium.api.cluster.octovigil.v1.EvaluateRequest.ctx:type_name -> google.protobuf.Struct
	21, // 15: octelium.api.cluster.octovigil.v1.EvaluateResponse.effect:type_name -> octelium.api.main.core.v1.Policy.Spec.Rule.Effect
	22, // 16: octelium.api.cluster.octovigil.v1.EvaluateRequest.InlinePolicy.policy:type_name -> octelium.api.main.core.v1.InlinePolicy
	23, // 17: octelium.api.cluster.octovigil.v1.EvaluateRequest.InlinePolicy.resourceRef:type_name -> octelium.api.main.meta.v1.ObjectReference
	0,  // 18: octelium.api.cluster.octovigil.v1.InternalService.AuthenticateAndAuthorize:input_type -> octelium.api.cluster.octovigil.v1.AuthenticateAndAuthorizeRequest
	6,  // 19: octelium.api.cluster.octovigil.v1.InternalService.Authorize:input_type -> octelium.api.cluster.octovigil.v1.AuthorizeRequest
	4,  // 20: octelium.api.cluster.octovigil.v1.InternalService.GetDownstreamFromSessionUID:input_type -> octelium.api.cluster.octovigil.v1.GetDownstreamFromSessionUIDRequest
	8,  // 21: octelium.api.cluster.octovigil.v1.InternalService.Evaluate:input_type -> octelium.api.cluster.octovigil.v1.EvaluateRequest
	1,  // 22: octelium.api.cluster.octovigil.v1.InternalService.AuthenticateAndAuthorize:output_type -> octelium.api.cluster.octovigil.v1.AuthenticateAndAuthorizeResponse
	7,  // 23: octelium.api.cluster.octovigil.v1.InternalService.Authorize:output_type -> octelium.api.cluster.octovigil.v1.AuthorizeResponse
	5,  // 24: octelium.api.cluster.octovigil.v1.InternalService.GetDownstreamFromSessionUID:output_type -> octelium.api.cluster.octovigil.v1.GetDownstreamFromSessionUIDResponse
	9,  // 25: octelium.api.cluster.octovigil.v1.InternalService.Evaluate:output_type -> octelium.api.cluster.octovigil.v1.EvaluateResponse
	22, // [22:26] is the sub-list for method output_type
	18, // [18:22] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_coctovigilv1_proto_init() }
func file_coctovigilv1_proto_init() {
	if File_coctovigilv1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coctovigilv1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coctovigilv1_proto_goTypes,
		DependencyIndexes: file_coctovigilv1_proto_depIdxs,
		MessageInfos:      file_coctovigilv1_proto_msgTypes,
	}.Build()
	File_coctovigilv1_proto = out.File
	file_coctovigilv1_proto_rawDesc = nil
	file_coctovigilv1_proto_goTypes = nil
	file_coctovigilv1_proto_depIdxs = nil
}
