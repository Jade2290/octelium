// Copyright Octelium Labs, LLC. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.21.12
// source: rmetav1.proto

package rmetav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListOptions_OrderBy_Mode int32

const (
	ListOptions_OrderBy_MODE_UNSET ListOptions_OrderBy_Mode = 0
	ListOptions_OrderBy_MODE_ASC   ListOptions_OrderBy_Mode = 1
	ListOptions_OrderBy_MODE_DESC  ListOptions_OrderBy_Mode = 2
)

// Enum value maps for ListOptions_OrderBy_Mode.
var (
	ListOptions_OrderBy_Mode_name = map[int32]string{
		0: "MODE_UNSET",
		1: "MODE_ASC",
		2: "MODE_DESC",
	}
	ListOptions_OrderBy_Mode_value = map[string]int32{
		"MODE_UNSET": 0,
		"MODE_ASC":   1,
		"MODE_DESC":  2,
	}
)

func (x ListOptions_OrderBy_Mode) Enum() *ListOptions_OrderBy_Mode {
	p := new(ListOptions_OrderBy_Mode)
	*p = x
	return p
}

func (x ListOptions_OrderBy_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListOptions_OrderBy_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_rmetav1_proto_enumTypes[0].Descriptor()
}

func (ListOptions_OrderBy_Mode) Type() protoreflect.EnumType {
	return &file_rmetav1_proto_enumTypes[0]
}

func (x ListOptions_OrderBy_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListOptions_OrderBy_Mode.Descriptor instead.
func (ListOptions_OrderBy_Mode) EnumDescriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{0, 0, 0}
}

type ListOptions_OrderBy_Type int32

const (
	ListOptions_OrderBy_TYPE_UNSET      ListOptions_OrderBy_Type = 0
	ListOptions_OrderBy_TYPE_NAME       ListOptions_OrderBy_Type = 1
	ListOptions_OrderBy_TYPE_CREATED_AT ListOptions_OrderBy_Type = 2
)

// Enum value maps for ListOptions_OrderBy_Type.
var (
	ListOptions_OrderBy_Type_name = map[int32]string{
		0: "TYPE_UNSET",
		1: "TYPE_NAME",
		2: "TYPE_CREATED_AT",
	}
	ListOptions_OrderBy_Type_value = map[string]int32{
		"TYPE_UNSET":      0,
		"TYPE_NAME":       1,
		"TYPE_CREATED_AT": 2,
	}
)

func (x ListOptions_OrderBy_Type) Enum() *ListOptions_OrderBy_Type {
	p := new(ListOptions_OrderBy_Type)
	*p = x
	return p
}

func (x ListOptions_OrderBy_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListOptions_OrderBy_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_rmetav1_proto_enumTypes[1].Descriptor()
}

func (ListOptions_OrderBy_Type) Type() protoreflect.EnumType {
	return &file_rmetav1_proto_enumTypes[1]
}

func (x ListOptions_OrderBy_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListOptions_OrderBy_Type.Descriptor instead.
func (ListOptions_OrderBy_Type) EnumDescriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{0, 0, 1}
}

type ListOptions_Filter_Op int32

const (
	ListOptions_Filter_OP_UNSET    ListOptions_Filter_Op = 0
	ListOptions_Filter_OP_EQ       ListOptions_Filter_Op = 1
	ListOptions_Filter_OP_INCLUDES ListOptions_Filter_Op = 2
)

// Enum value maps for ListOptions_Filter_Op.
var (
	ListOptions_Filter_Op_name = map[int32]string{
		0: "OP_UNSET",
		1: "OP_EQ",
		2: "OP_INCLUDES",
	}
	ListOptions_Filter_Op_value = map[string]int32{
		"OP_UNSET":    0,
		"OP_EQ":       1,
		"OP_INCLUDES": 2,
	}
)

func (x ListOptions_Filter_Op) Enum() *ListOptions_Filter_Op {
	p := new(ListOptions_Filter_Op)
	*p = x
	return p
}

func (x ListOptions_Filter_Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListOptions_Filter_Op) Descriptor() protoreflect.EnumDescriptor {
	return file_rmetav1_proto_enumTypes[2].Descriptor()
}

func (ListOptions_Filter_Op) Type() protoreflect.EnumType {
	return &file_rmetav1_proto_enumTypes[2]
}

func (x ListOptions_Filter_Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListOptions_Filter_Op.Descriptor instead.
func (ListOptions_Filter_Op) EnumDescriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{0, 1, 0}
}

type ListOptions struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Filters          []*ListOptions_Filter  `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	SpecLabels       map[string]string      `protobuf:"bytes,2,rep,name=specLabels,proto3" json:"specLabels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SpecLabelsORed   map[string]string      `protobuf:"bytes,3,rep,name=specLabelsORed,proto3" json:"specLabelsORed,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SystemLabels     map[string]string      `protobuf:"bytes,4,rep,name=systemLabels,proto3" json:"systemLabels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SystemLabelsORed map[string]string      `protobuf:"bytes,5,rep,name=systemLabelsORed,proto3" json:"systemLabelsORed,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Paginate         bool                   `protobuf:"varint,6,opt,name=paginate,proto3" json:"paginate,omitempty"`
	Page             uint32                 `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	ItemsPerPage     uint32                 `protobuf:"varint,8,opt,name=itemsPerPage,proto3" json:"itemsPerPage,omitempty"`
	OrderBy          []*ListOptions_OrderBy `protobuf:"bytes,9,rep,name=orderBy,proto3" json:"orderBy,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListOptions) Reset() {
	*x = ListOptions{}
	mi := &file_rmetav1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOptions) ProtoMessage() {}

func (x *ListOptions) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOptions.ProtoReflect.Descriptor instead.
func (*ListOptions) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{0}
}

func (x *ListOptions) GetFilters() []*ListOptions_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListOptions) GetSpecLabels() map[string]string {
	if x != nil {
		return x.SpecLabels
	}
	return nil
}

func (x *ListOptions) GetSpecLabelsORed() map[string]string {
	if x != nil {
		return x.SpecLabelsORed
	}
	return nil
}

func (x *ListOptions) GetSystemLabels() map[string]string {
	if x != nil {
		return x.SystemLabels
	}
	return nil
}

func (x *ListOptions) GetSystemLabelsORed() map[string]string {
	if x != nil {
		return x.SystemLabelsORed
	}
	return nil
}

func (x *ListOptions) GetPaginate() bool {
	if x != nil {
		return x.Paginate
	}
	return false
}

func (x *ListOptions) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListOptions) GetItemsPerPage() uint32 {
	if x != nil {
		return x.ItemsPerPage
	}
	return 0
}

func (x *ListOptions) GetOrderBy() []*ListOptions_OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

type WatchEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *WatchEvent_Event      `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchEvent) Reset() {
	*x = WatchEvent{}
	mi := &file_rmetav1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchEvent) ProtoMessage() {}

func (x *WatchEvent) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchEvent.ProtoReflect.Descriptor instead.
func (*WatchEvent) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{1}
}

func (x *WatchEvent) GetEvent() *WatchEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type WatchOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkipInitial   bool                   `protobuf:"varint,1,opt,name=skipInitial,proto3" json:"skipInitial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchOptions) Reset() {
	*x = WatchOptions{}
	mi := &file_rmetav1_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchOptions) ProtoMessage() {}

func (x *WatchOptions) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchOptions.ProtoReflect.Descriptor instead.
func (*WatchOptions) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{2}
}

func (x *WatchOptions) GetSkipInitial() bool {
	if x != nil {
		return x.SkipInitial
	}
	return false
}

type DeleteOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UID is the objet's UID.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Name is the object name that needs to be deleted. Either the name or the
	// UID must be used.
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOptions) Reset() {
	*x = DeleteOptions{}
	mi := &file_rmetav1_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOptions) ProtoMessage() {}

func (x *DeleteOptions) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOptions.ProtoReflect.Descriptor instead.
func (*DeleteOptions) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteOptions) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DeleteOptions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UID is the object's UID
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Name is the object's name
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOptions) Reset() {
	*x = GetOptions{}
	mi := &file_rmetav1_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOptions) ProtoMessage() {}

func (x *GetOptions) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOptions.ProtoReflect.Descriptor instead.
func (*GetOptions) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{4}
}

func (x *GetOptions) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetOptions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OperationResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationResult) Reset() {
	*x = OperationResult{}
	mi := &file_rmetav1_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationResult) ProtoMessage() {}

func (x *OperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationResult.ProtoReflect.Descriptor instead.
func (*OperationResult) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{5}
}

type ListOptions_OrderBy struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Type          ListOptions_OrderBy_Type `protobuf:"varint,1,opt,name=type,proto3,enum=octelium.api.rsc.meta.v1.ListOptions_OrderBy_Type" json:"type,omitempty"`
	Mode          ListOptions_OrderBy_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=octelium.api.rsc.meta.v1.ListOptions_OrderBy_Mode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOptions_OrderBy) Reset() {
	*x = ListOptions_OrderBy{}
	mi := &file_rmetav1_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOptions_OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOptions_OrderBy) ProtoMessage() {}

func (x *ListOptions_OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOptions_OrderBy.ProtoReflect.Descriptor instead.
func (*ListOptions_OrderBy) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ListOptions_OrderBy) GetType() ListOptions_OrderBy_Type {
	if x != nil {
		return x.Type
	}
	return ListOptions_OrderBy_TYPE_UNSET
}

func (x *ListOptions_OrderBy) GetMode() ListOptions_OrderBy_Mode {
	if x != nil {
		return x.Mode
	}
	return ListOptions_OrderBy_MODE_UNSET
}

type ListOptions_Filter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Op            ListOptions_Filter_Op  `protobuf:"varint,2,opt,name=op,proto3,enum=octelium.api.rsc.meta.v1.ListOptions_Filter_Op" json:"op,omitempty"`
	Value         *structpb.Value        `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOptions_Filter) Reset() {
	*x = ListOptions_Filter{}
	mi := &file_rmetav1_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOptions_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOptions_Filter) ProtoMessage() {}

func (x *ListOptions_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOptions_Filter.ProtoReflect.Descriptor instead.
func (*ListOptions_Filter) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ListOptions_Filter) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ListOptions_Filter) GetOp() ListOptions_Filter_Op {
	if x != nil {
		return x.Op
	}
	return ListOptions_Filter_OP_UNSET
}

func (x *ListOptions_Filter) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type WatchEvent_Event struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	ApiVersion string                 `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// Types that are valid to be assigned to Type:
	//
	//	*WatchEvent_Event_Create_
	//	*WatchEvent_Event_Update_
	//	*WatchEvent_Event_Delete_
	Type          isWatchEvent_Event_Type `protobuf_oneof:"Type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchEvent_Event) Reset() {
	*x = WatchEvent_Event{}
	mi := &file_rmetav1_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchEvent_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchEvent_Event) ProtoMessage() {}

func (x *WatchEvent_Event) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchEvent_Event.ProtoReflect.Descriptor instead.
func (*WatchEvent_Event) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{1, 0}
}

func (x *WatchEvent_Event) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *WatchEvent_Event) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *WatchEvent_Event) GetType() isWatchEvent_Event_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *WatchEvent_Event) GetCreate() *WatchEvent_Event_Create {
	if x != nil {
		if x, ok := x.Type.(*WatchEvent_Event_Create_); ok {
			return x.Create
		}
	}
	return nil
}

func (x *WatchEvent_Event) GetUpdate() *WatchEvent_Event_Update {
	if x != nil {
		if x, ok := x.Type.(*WatchEvent_Event_Update_); ok {
			return x.Update
		}
	}
	return nil
}

func (x *WatchEvent_Event) GetDelete() *WatchEvent_Event_Delete {
	if x != nil {
		if x, ok := x.Type.(*WatchEvent_Event_Delete_); ok {
			return x.Delete
		}
	}
	return nil
}

type isWatchEvent_Event_Type interface {
	isWatchEvent_Event_Type()
}

type WatchEvent_Event_Create_ struct {
	Create *WatchEvent_Event_Create `protobuf:"bytes,3,opt,name=create,proto3,oneof"`
}

type WatchEvent_Event_Update_ struct {
	Update *WatchEvent_Event_Update `protobuf:"bytes,4,opt,name=update,proto3,oneof"`
}

type WatchEvent_Event_Delete_ struct {
	Delete *WatchEvent_Event_Delete `protobuf:"bytes,5,opt,name=delete,proto3,oneof"`
}

func (*WatchEvent_Event_Create_) isWatchEvent_Event_Type() {}

func (*WatchEvent_Event_Update_) isWatchEvent_Event_Type() {}

func (*WatchEvent_Event_Delete_) isWatchEvent_Event_Type() {}

type WatchEvent_Event_Create struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *anypb.Any             `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchEvent_Event_Create) Reset() {
	*x = WatchEvent_Event_Create{}
	mi := &file_rmetav1_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchEvent_Event_Create) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchEvent_Event_Create) ProtoMessage() {}

func (x *WatchEvent_Event_Create) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchEvent_Event_Create.ProtoReflect.Descriptor instead.
func (*WatchEvent_Event_Create) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *WatchEvent_Event_Create) GetItem() *anypb.Any {
	if x != nil {
		return x.Item
	}
	return nil
}

type WatchEvent_Event_Update struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewItem       *anypb.Any             `protobuf:"bytes,1,opt,name=newItem,proto3" json:"newItem,omitempty"`
	OldItem       *anypb.Any             `protobuf:"bytes,2,opt,name=oldItem,proto3" json:"oldItem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchEvent_Event_Update) Reset() {
	*x = WatchEvent_Event_Update{}
	mi := &file_rmetav1_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchEvent_Event_Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchEvent_Event_Update) ProtoMessage() {}

func (x *WatchEvent_Event_Update) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchEvent_Event_Update.ProtoReflect.Descriptor instead.
func (*WatchEvent_Event_Update) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (x *WatchEvent_Event_Update) GetNewItem() *anypb.Any {
	if x != nil {
		return x.NewItem
	}
	return nil
}

func (x *WatchEvent_Event_Update) GetOldItem() *anypb.Any {
	if x != nil {
		return x.OldItem
	}
	return nil
}

type WatchEvent_Event_Delete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *anypb.Any             `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchEvent_Event_Delete) Reset() {
	*x = WatchEvent_Event_Delete{}
	mi := &file_rmetav1_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchEvent_Event_Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchEvent_Event_Delete) ProtoMessage() {}

func (x *WatchEvent_Event_Delete) ProtoReflect() protoreflect.Message {
	mi := &file_rmetav1_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchEvent_Event_Delete.ProtoReflect.Descriptor instead.
func (*WatchEvent_Event_Delete) Descriptor() ([]byte, []int) {
	return file_rmetav1_proto_rawDescGZIP(), []int{1, 0, 2}
}

func (x *WatchEvent_Event_Delete) GetItem() *anypb.Any {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_rmetav1_proto protoreflect.FileDescriptor

var file_rmetav1_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x72, 0x6d, 0x65, 0x74, 0x61, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x18, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x73,
	0x63, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc7, 0x0a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x46, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x73, 0x63, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x55, 0x0a, 0x0a, 0x73, 0x70,
	0x65, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x73,
	0x63, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x61, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x4f,
	0x52, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6f, 0x63, 0x74, 0x65,
	0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x73, 0x63, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x4f, 0x52, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x4f, 0x52, 0x65, 0x64, 0x12, 0x5b, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6f, 0x63, 0x74,
	0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x73, 0x63, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x67, 0x0a, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x4f, 0x52, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6f, 0x63,
	0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x73, 0x63, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x4f,
	0x52, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x4f, 0x52, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x47,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x73, 0x63, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x1a, 0x8a, 0x02, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x12, 0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x32, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x73, 0x63, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6f, 0x63, 0x74, 0x65,
	0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x73, 0x63, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x22, 0x33, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4d,
	0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d,
	0x4f, 0x44, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x44,
	0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x22, 0x3a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f,
	0x41, 0x54, 0x10, 0x02, 0x1a, 0xbd, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3f, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2f, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x72, 0x73, 0x63, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e,
	0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x02, 0x4f, 0x70, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x50,
	0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x50, 0x5f, 0x45,
	0x51, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x5f, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44,
	0x45, 0x53, 0x10, 0x02, 0x1a, 0x3d, 0x0a, 0x0f, 0x53, 0x70, 0x65, 0x63, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x53, 0x70, 0x65, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x4f, 0x52, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x43, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x4f, 0x52, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcd, 0x04, 0x0a,
	0x0a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x63, 0x74,
	0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x73, 0x63, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xfc, 0x03,
	0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x4b, 0x0a, 0x06, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x63,
	0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x73, 0x63, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c,
	0x69, 0x75, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x73, 0x63, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x73, 0x63, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x1a, 0x32, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x1a, 0x68, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2e, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x2e, 0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x1a, 0x32, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x42, 0x06, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x30, 0x0a, 0x0c,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x6b, 0x69, 0x70, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x35,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x2f, 0x5a, 0x2d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x63, 0x74, 0x65, 0x6c,
	0x69, 0x75, 0x6d, 0x2f, 0x6f, 0x63, 0x74, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x72, 0x73, 0x63, 0x2f, 0x72, 0x6d, 0x65, 0x74, 0x61, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rmetav1_proto_rawDescOnce sync.Once
	file_rmetav1_proto_rawDescData = file_rmetav1_proto_rawDesc
)

func file_rmetav1_proto_rawDescGZIP() []byte {
	file_rmetav1_proto_rawDescOnce.Do(func() {
		file_rmetav1_proto_rawDescData = protoimpl.X.CompressGZIP(file_rmetav1_proto_rawDescData)
	})
	return file_rmetav1_proto_rawDescData
}

var file_rmetav1_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_rmetav1_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_rmetav1_proto_goTypes = []any{
	(ListOptions_OrderBy_Mode)(0),   // 0: octelium.api.rsc.meta.v1.ListOptions.OrderBy.Mode
	(ListOptions_OrderBy_Type)(0),   // 1: octelium.api.rsc.meta.v1.ListOptions.OrderBy.Type
	(ListOptions_Filter_Op)(0),      // 2: octelium.api.rsc.meta.v1.ListOptions.Filter.Op
	(*ListOptions)(nil),             // 3: octelium.api.rsc.meta.v1.ListOptions
	(*WatchEvent)(nil),              // 4: octelium.api.rsc.meta.v1.WatchEvent
	(*WatchOptions)(nil),            // 5: octelium.api.rsc.meta.v1.WatchOptions
	(*DeleteOptions)(nil),           // 6: octelium.api.rsc.meta.v1.DeleteOptions
	(*GetOptions)(nil),              // 7: octelium.api.rsc.meta.v1.GetOptions
	(*OperationResult)(nil),         // 8: octelium.api.rsc.meta.v1.OperationResult
	(*ListOptions_OrderBy)(nil),     // 9: octelium.api.rsc.meta.v1.ListOptions.OrderBy
	(*ListOptions_Filter)(nil),      // 10: octelium.api.rsc.meta.v1.ListOptions.Filter
	nil,                             // 11: octelium.api.rsc.meta.v1.ListOptions.SpecLabelsEntry
	nil,                             // 12: octelium.api.rsc.meta.v1.ListOptions.SpecLabelsORedEntry
	nil,                             // 13: octelium.api.rsc.meta.v1.ListOptions.SystemLabelsEntry
	nil,                             // 14: octelium.api.rsc.meta.v1.ListOptions.SystemLabelsORedEntry
	(*WatchEvent_Event)(nil),        // 15: octelium.api.rsc.meta.v1.WatchEvent.Event
	(*WatchEvent_Event_Create)(nil), // 16: octelium.api.rsc.meta.v1.WatchEvent.Event.Create
	(*WatchEvent_Event_Update)(nil), // 17: octelium.api.rsc.meta.v1.WatchEvent.Event.Update
	(*WatchEvent_Event_Delete)(nil), // 18: octelium.api.rsc.meta.v1.WatchEvent.Event.Delete
	(*structpb.Value)(nil),          // 19: google.protobuf.Value
	(*anypb.Any)(nil),               // 20: google.protobuf.Any
}
var file_rmetav1_proto_depIdxs = []int32{
	10, // 0: octelium.api.rsc.meta.v1.ListOptions.filters:type_name -> octelium.api.rsc.meta.v1.ListOptions.Filter
	11, // 1: octelium.api.rsc.meta.v1.ListOptions.specLabels:type_name -> octelium.api.rsc.meta.v1.ListOptions.SpecLabelsEntry
	12, // 2: octelium.api.rsc.meta.v1.ListOptions.specLabelsORed:type_name -> octelium.api.rsc.meta.v1.ListOptions.SpecLabelsORedEntry
	13, // 3: octelium.api.rsc.meta.v1.ListOptions.systemLabels:type_name -> octelium.api.rsc.meta.v1.ListOptions.SystemLabelsEntry
	14, // 4: octelium.api.rsc.meta.v1.ListOptions.systemLabelsORed:type_name -> octelium.api.rsc.meta.v1.ListOptions.SystemLabelsORedEntry
	9,  // 5: octelium.api.rsc.meta.v1.ListOptions.orderBy:type_name -> octelium.api.rsc.meta.v1.ListOptions.OrderBy
	15, // 6: octelium.api.rsc.meta.v1.WatchEvent.event:type_name -> octelium.api.rsc.meta.v1.WatchEvent.Event
	1,  // 7: octelium.api.rsc.meta.v1.ListOptions.OrderBy.type:type_name -> octelium.api.rsc.meta.v1.ListOptions.OrderBy.Type
	0,  // 8: octelium.api.rsc.meta.v1.ListOptions.OrderBy.mode:type_name -> octelium.api.rsc.meta.v1.ListOptions.OrderBy.Mode
	2,  // 9: octelium.api.rsc.meta.v1.ListOptions.Filter.op:type_name -> octelium.api.rsc.meta.v1.ListOptions.Filter.Op
	19, // 10: octelium.api.rsc.meta.v1.ListOptions.Filter.value:type_name -> google.protobuf.Value
	16, // 11: octelium.api.rsc.meta.v1.WatchEvent.Event.create:type_name -> octelium.api.rsc.meta.v1.WatchEvent.Event.Create
	17, // 12: octelium.api.rsc.meta.v1.WatchEvent.Event.update:type_name -> octelium.api.rsc.meta.v1.WatchEvent.Event.Update
	18, // 13: octelium.api.rsc.meta.v1.WatchEvent.Event.delete:type_name -> octelium.api.rsc.meta.v1.WatchEvent.Event.Delete
	20, // 14: octelium.api.rsc.meta.v1.WatchEvent.Event.Create.item:type_name -> google.protobuf.Any
	20, // 15: octelium.api.rsc.meta.v1.WatchEvent.Event.Update.newItem:type_name -> google.protobuf.Any
	20, // 16: octelium.api.rsc.meta.v1.WatchEvent.Event.Update.oldItem:type_name -> google.protobuf.Any
	20, // 17: octelium.api.rsc.meta.v1.WatchEvent.Event.Delete.item:type_name -> google.protobuf.Any
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_rmetav1_proto_init() }
func file_rmetav1_proto_init() {
	if File_rmetav1_proto != nil {
		return
	}
	file_rmetav1_proto_msgTypes[12].OneofWrappers = []any{
		(*WatchEvent_Event_Create_)(nil),
		(*WatchEvent_Event_Update_)(nil),
		(*WatchEvent_Event_Delete_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rmetav1_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rmetav1_proto_goTypes,
		DependencyIndexes: file_rmetav1_proto_depIdxs,
		EnumInfos:         file_rmetav1_proto_enumTypes,
		MessageInfos:      file_rmetav1_proto_msgTypes,
	}.Build()
	File_rmetav1_proto = out.File
	file_rmetav1_proto_rawDesc = nil
	file_rmetav1_proto_goTypes = nil
	file_rmetav1_proto_depIdxs = nil
}
